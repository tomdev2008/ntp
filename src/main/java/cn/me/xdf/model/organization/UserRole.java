package cn.me.xdf.model.organization;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.EnumType;import javax.persistence.Enumerated;import javax.persistence.FetchType;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.Table;import javax.persistence.UniqueConstraint;import org.hibernate.annotations.Cache;import org.hibernate.annotations.CacheConcurrencyStrategy;import cn.me.xdf.model.base.IdEntity;/** * 用户对应角色 * <p/> * 关于角色,@see cn.xdf.me.otp.model.sys.RoleEnum *  * @author xiaobin */@SuppressWarnings("serial")@Entity@Table(name = "SYS_USER_ROLE", uniqueConstraints = { @UniqueConstraint(columnNames = {		"person_id", "person_role" }) })@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)public class UserRole extends IdEntity {	private SysOrgPerson sysOrgPerson;	private RoleEnum roleEnum;	public UserRole() {	}	public UserRole(SysOrgPerson sysOrgPerson, RoleEnum roleEnum) {		this.sysOrgPerson = sysOrgPerson;		this.roleEnum = roleEnum;	}	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "person_id", nullable = true)	public SysOrgPerson getSysOrgPerson() {		return sysOrgPerson;	}	public void setSysOrgPerson(SysOrgPerson sysOrgPerson) {		this.sysOrgPerson = sysOrgPerson;	}	@Enumerated(EnumType.STRING)	@Column(name = "person_role")	public RoleEnum getRoleEnum() {		return roleEnum;	}	public void setRoleEnum(RoleEnum roleEnum) {		this.roleEnum = roleEnum;	}}