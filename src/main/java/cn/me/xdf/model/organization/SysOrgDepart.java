package cn.me.xdf.model.organization;import java.util.ArrayList;import java.util.List;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToMany;import javax.persistence.Table;import javax.persistence.Transient;import cn.me.xdf.model.base.IdEntity;/** * <pre> * 	fdOrgType==1:机构 *  * 	fdOrgType==2:部门 * </pre> *  * @author jiaxj 组织架构元素 */@SuppressWarnings("serial")@Entity// @Table(name = "SYS_ORG_DEPART_OTP",schema="DB_IXDF")@Table(name = "SYS_ORG_DEPART")public class SysOrgDepart extends IdEntity {	private Integer fdOrgType;	/**	 * 组织架构名称	 */	private String fdName;	/**	 * 组织架构编码	 */	private String fdNo;	/**	 * 对应的上级编码	 */	// private String fdParentId;	/**	 * 类型 1:机构，2：部门	 * 	 * @return	 */	@Column(name = "FD_ORG_TYPE")	public Integer getFdOrgType() {		return fdOrgType;	}	/**	 * 1：机构，2：部门	 * 	 * @param fdOrgType	 */	public void setFdOrgType(Integer fdOrgType) {		this.fdOrgType = fdOrgType;	}	/**	 * 名称	 * 	 * @return	 */	@Column(name = "FD_NAME")	public String getFdName() {		return fdName;	}	public void setFdName(String fdName) {		this.fdName = fdName;	}	/**	 * 编号	 * 	 * @return	 */	@Column(name = "FD_NO")	public String getFdNo() {		return fdNo;	}	public void setFdNo(String fdNo) {		this.fdNo = fdNo;	}	/**	 * 获取上级编码	 * 	 * @return	 */	@Transient	public String getFdParentId() {		if (hbmParent == null)			return null;		return hbmParent.getFdId();	}	private SysOrgDepart hbmParent;	/**	 * 获取上级的机构	 * 	 * @return	 */	@Transient	public SysOrgDepart getHbmParentOrg() {		if (getFdOrgType().intValue() == 1)			return null;		SysOrgDepart element = getHbmParent();		while (element != null && element.getFdOrgType().intValue() > 1) {			element = element.getHbmParent();		}		return element;	}	/**	 * 获取上级	 * 	 * @return	 */	@ManyToOne(fetch = FetchType.LAZY)	@JoinColumn(name = "FD_PARENTID")	public SysOrgDepart getHbmParent() {		return hbmParent;	}	/**	 * 上级	 * 	 * @param parent	 */	public void setHbmParent(SysOrgDepart parent) {		this.hbmParent = parent;	}	/*	 * 子（此关系由父维护，不提供set方法）	 */	private List<SysOrgDepart> hbmChildren;	@Transient	public List<SysOrgDepart> getFdChildren() {		List<SysOrgDepart> rtnVal = new ArrayList<SysOrgDepart>();		if (getHbmChildren() != null)			rtnVal.addAll(getHbmChildren());		return rtnVal;	}	@Transient	public List<SysOrgDepart> getFdAllChildren() {		List<SysOrgDepart> rtnVal = new ArrayList<SysOrgDepart>();		if (getHbmChildren() != null) {			List<SysOrgDepart> elements = getHbmChildren();			for (SysOrgDepart e : elements) {				List<SysOrgDepart> e2 = e.getHbmChildren();				if (e2 != null) {					for (SysOrgDepart e3 : e2) {						if (e3 != null) {							List<SysOrgDepart> e4 = e3.getFdChildren();							if (e4 != null) {								rtnVal.addAll(e4);							}						}					}					rtnVal.addAll(e2);				}			}			rtnVal.addAll(elements);		}		return rtnVal;	}	/**	 * 获取下级	 * 	 * @return	 */	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hbmParent")	public List<SysOrgDepart> getHbmChildren() {		return hbmChildren;	}	/**	 * 下级	 * 	 * @param children	 */	public void setHbmChildren(List<SysOrgDepart> children) {		this.hbmChildren = children;	}}