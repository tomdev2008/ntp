package cn.me.xdf.model.organization;import java.util.ArrayList;import java.util.List;import javax.persistence.*;import org.apache.commons.lang3.StringUtils;import org.codehaus.jackson.annotate.JsonIgnore;import org.springframework.util.CollectionUtils;import cn.me.xdf.common.utils.ComUtils;import cn.me.xdf.model.base.IAttMain;/** * @author xiaobin *         <p/> *         <p/> *         <pre> *                                         此model以ixdf平台的数据库视图来引用。 *                                        <b>1</b>：在连接到oracle时，SysOrgPerson是只读的。 *                                        <b>2</b>：所有域类对SysOrgPerson的引用建议使用弱关联 *                                        <b>3</b>:如果对此类建立关联的话，必须使用单向关联。 *                                        关于权限： *                                        <b>1</b>：详细请查看 @see cn.xdf.me.otp.model.sys.UserRole * *                                 </pre> * @author jiaxj 个人 */@SuppressWarnings("serial")@Entity@Table(name = "SYS_ORG_PERSON")@PrimaryKeyJoinColumn(name = "FDID")public class SysOrgPerson extends SysOrgElement implements IAttMain {    public SysOrgPerson() {        super();        setFdOrgType(new Integer(ORG_TYPE_PERSON));    }    /**     * 对应登录名     */    private String loginName;    /**     * 用户登录密码     */    private String password;    /**     * 用户初始密码     */    private String fdInitPassword;    /**     *     */    private String fdAttendanceCardNumber;    /**     * 用户工作电话     */    private String fdWorkPhone;    /**     * 用户qq     */    private String fdQq;    /**     * 用户msn     */    private String fdMsn;    private String fdIdentityCard;    /**     * 性别     */    private String fdSex;    /**     * 是否在职     */    private String fdIsEmp;    // 部门名称    private String deptName;    // 仅作为页面引用，不会持久化到数据库    private String plainPassword;    // 仅作为业务代码引用，不会持久化到数据库    private List<UserRole> userRoles;    // FD_PHOTO_URL    // 人员头像    private String fdPhotoUrl;    private String fdMobileNo;    private String fdEmail;    public void setFdMobileNo(String fdMobileNo) {        this.fdMobileNo = fdMobileNo;    }    public String getFdMobileNo() {        return fdMobileNo;    }    public String getFdEmail() {        return fdEmail;    }    public void setFdEmail(String fdEmail) {        this.fdEmail = fdEmail;    }    public SysOrgPerson(String fdId) {        this.fdId = fdId;    }    /**     * 登录名     *     * @return     */    @Column(name = "FD_LOGIN_NAME")    public String getLoginName() {        return loginName;    }    public void setLoginName(String loginName) {        this.loginName = loginName;    }    /**     * 密码     *     * @return     */    @Column(name = "FD_PASSWORD")    public String getPassword() {        return password;    }    public void setPassword(String password) {        this.password = password;    }    /**     * 考勤卡号     *     * @return     */    @Column(name = "FD_ATTENDANCE_CARD_NUMBER")    public String getFdAttendanceCardNumber() {        return fdAttendanceCardNumber;    }    public void setFdAttendanceCardNumber(String fdAttendanceCardNumber) {        this.fdAttendanceCardNumber = fdAttendanceCardNumber;    }    /**     * 办公电话     *     * @return     */    @Column(name = "FD_WORK_PHONE")    public String getFdWorkPhone() {        return fdWorkPhone;    }    public void setFdWorkPhone(String fdWorkPhone) {        this.fdWorkPhone = fdWorkPhone;    }    /**     * 初使密码用于OMS     *     * @return     */    @Column(name = "FD_INIT_PASSWORD")    public String getFdInitPassword() {        return fdInitPassword;    }    public void setFdInitPassword(String fdInitPassword) {        this.fdInitPassword = fdInitPassword;    }    /**     * QQ     *     * @return     */    @Column(name = "FD_QQ")    public String getFdQq() {        return fdQq;    }    public void setFdQq(String fdQq) {        this.fdQq = fdQq;    }    /**     * MSN     *     * @return     */    @Column(name = "FD_MSN")    public String getFdMsn() {        return fdMsn;    }    public void setFdMsn(String fdMsn) {        this.fdMsn = fdMsn;    }    /**     * 身份证     *     * @return     */    @Column(name = "FD_IDENTITY_CARD")    public String getFdIdentityCard() {        return fdIdentityCard;    }    public void setFdIdentityCard(String fdIdentityCard) {        this.fdIdentityCard = fdIdentityCard;    }    /**     * 性别     *     * @return     */    @Column(name = "FD_SEX")    public String getFdSex() {        return fdSex;    }    public void setFdSex(String fdSex) {        this.fdSex = fdSex;    }    /**     * 0:未入职 1:在职     *     * @return     */    @Column(name = "FD_IS_EMP")    public String getFdIsEmp() {        return fdIsEmp;    }    /**     * 0：未入职 1：入职     *     * @param fdIsEmp     */    public void setFdIsEmp(String fdIsEmp) {        this.fdIsEmp = fdIsEmp;    }    /**     * 对应的人员部门id     *     * @return     */    @Transient    public String getDepatId() {        if (getHbmParent() == null)            return null;        return getHbmParent().getFdId();    }    @Column(name = "FD_PHOTO_URL")    public String getFdPhotoUrl() {        return fdPhotoUrl;    }    public void setFdPhotoUrl(String fdPhotoUrl) {        this.fdPhotoUrl = fdPhotoUrl;    }    @Transient    @JsonIgnore    public String getPlainPassword() {        return plainPassword;    }    public void setPlainPassword(String plainPassword) {        this.plainPassword = plainPassword;    }    @Transient    @JsonIgnore    public List<UserRole> getUserRoles() {        return userRoles;    }    public void setUserRoles(List<UserRole> userRoles) {        this.userRoles = userRoles;    }    /**     * 部门名称     *     * @return     */    @Transient    public String getDeptName() {        if (getHbmParent() != null) {            return getHbmParent().getFdName();        }        return deptName;    }    /**     * 部门名称     *     * @param deptName     */    public void setDeptName(String deptName) {        this.deptName = deptName;    }    @Transient    @JsonIgnore    public List<String> getRoleList() {        // return ImmutableList.copyOf(StringUtils.split("user", ","));        List<String> list = new ArrayList<String>();        if (!CollectionUtils.isEmpty(userRoles)) {            for (UserRole userRole : userRoles) {                list.add(userRole.getRoleEnum().getKey());            }        } else {            list.add(RoleEnum.default_role.getKey());        }        return list;    }    /**     * 姓名     *     * @return     */    @Transient    public String getRealName() {        return getFdName();    }    private String deptId;    @Transient    public String getDeptId() {        return deptId;    }    public void setDeptId(String deptId) {        this.deptId = deptId;    }    /**     * 获取人员头像     *     * @return     */    @Transient    public String getPoto() {        String photo = null;        if ("0".equals(getFdIsEmp())) {// 未入职员工            photo = getFdPhotoUrl();            if (StringUtils.isBlank(photo)) {                return ComUtils.getDefaultPoto();            } else if (photo.contains("http")) {                if (!ComUtils.isConnect(photo)) {                    return ComUtils.getDefaultPoto();                }            }        } else {            // 正式员工            photo = ComUtils.getURLByLoginName(getLoginName());            if (StringUtils.isBlank(photo)) {                return ComUtils.getDefaultPoto();            } else if (!ComUtils.isConnect(photo)) {                return ComUtils.getDefaultPoto();            }        }		return photo;	}        /**	 * 生日	 */	private String fdBirthDay;    	/**	 * 血型	 */	private String fdBloodType;		/**	 * 自我介绍	 */	private String selfIntroduction;	public String getFdBirthDay() {		return fdBirthDay;	}	public void setFdBirthDay(String fdBirthDay) {		this.fdBirthDay = fdBirthDay;	}	public String getFdBloodType() {		return fdBloodType;	}	public void setFdBloodType(String fdBloodType) {		this.fdBloodType = fdBloodType;	}	public String getSelfIntroduction() {		return selfIntroduction;	}	public void setSelfIntroduction(String selfIntroduction) {		this.selfIntroduction = selfIntroduction;	}		/**	 * 是否可用，只记录不可用的状态，00表示不可用	 */	private String fdAvailable;	public String getFdAvailable() {		return fdAvailable;	}	public void setFdAvailable(String fdAvailable) {		this.fdAvailable = fdAvailable;	}	}